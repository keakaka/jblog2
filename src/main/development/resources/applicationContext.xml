<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- auto proxy -->
	<aop:aspectj-autoproxy />

	<context:annotation-config />

	<context:component-scan
		base-package="com.cafe24.jblog.repository, com.cafe24.jblog.service, com.cafe24.jblog.aspect">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
	</context:component-scan>

	<!-- Connection Pool DataSource -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="org.mariadb.jdbc.Driver" />
		<property name="url"
			value="jdbc:mariadb://192.168.1.236:3307/jblog" />
		<property name="username" value="jblog" />
		<property name="password" value="jblog" />
	</bean>

	<!-- MyBatis SqlSessionFactoryBean -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:mybatis/configuration.xml" />
	</bean>
	<!-- MyBatis SqlSessionTemplate -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 트랜젝션 매니져 bean등록 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven/>
	
	<!-- 어노테이션으로 트랜젝션 매니저를 설정하기 위해 추가해야 하는 설정 -->
	<!-- 트랜젝션 매니져를 이용해 tx advice를 정의한다. -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" rollback-for="RuntimeException" />
			<tx:method name="insert*" rollback-for="RuntimeException"
				propagation="REQUIRED" isolation="SERIALIZABLE" />
			<tx:method name="update*" rollback-for="RuntimeException"
				propagation="REQUIRED" isolation="SERIALIZABLE" />
			<tx:method name="delete*" rollback-for="RuntimeException"
				propagation="REQUIRED" isolation="SERIALIZABLE" />
		</tx:attributes>
	</tx:advice> -->
	<!-- AOP를 이용하여 위의 txAdvice를 적용시키기 위해 advice객체가 weaving될 시점을 등록하는 것이다. -->
	<!-- <aop:config>
		<aop:pointcut id="serviceMethod"
			expression="execution(* com.cafe24.jblog.service..*Service.*(..))" />
		<aop:advisor id="transactionAdvice" pointcut-ref="serviceMethod"
			advice-ref="txAdvice" />
	</aop:config> -->

</beans>
